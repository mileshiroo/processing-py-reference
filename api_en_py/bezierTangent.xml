<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>bezierTangent()</name>

<category>Shape</category>

<subcategory>Curves</subcategory>

<type></type>

<example>
<image>bezierTangent_0.png</image>
<code><![CDATA[
noFill()
bezier(85, 20, 10, 10, 90, 90, 15, 80)
steps = 6
fill(255)
for i in range(steps + 1): 
    t = i / float(steps)
    # Get the location of the point
    x = bezierPoint(85, 10, 90, 15, t)
    y = bezierPoint(20, 10, 90, 80, t)
    # Get the tangent points
    tx = bezierTangent(85, 10, 90, 15, t)
    ty = bezierTangent(20, 10, 90, 80, t)
    # Calculate an angle from the tangent points
    a = atan2(ty, tx)
    a += PI
    stroke(255, 102, 0)
    line(x, y, cos(a)*30 + x, sin(a)*30 + y)
    # The following line of code makes a line 
    # inverse of the above line
    #line(x, y, cos(a)*-30 + x, sin(a)*-30 + y)
    stroke(0)
    ellipse(x, y, 5, 5)
]]></code>
</example>

<example>
<image>bezierTangent_1.png</image>
<code><![CDATA[
noFill()
bezier(85, 20, 10, 10, 90, 90, 15, 80)
stroke(255, 102, 0)
steps = 16
for i in range(steps + 1): 
    t = i / float(steps)
    x = bezierPoint(85, 10, 90, 15, t)
    y = bezierPoint(20, 10, 90, 80, t)
    tx = bezierTangent(85, 10, 90, 15, t)
    ty = bezierTangent(20, 10, 90, 80, t)
    a = atan2(ty, tx)
    a -= HALF_PI
    line(x, y, cos(a)*8 + x, sin(a)*8 + y)
]]></code>
</example>

<description><![CDATA[
Calculates the tangent of a point on a Bezier curve. There is a good definition of <a href="http://en.wikipedia.org/wiki/Tangent" target="new"><em>tangent</em> on Wikipedia</a>.
]]></description>

</root>
