<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>randomGaussian()</name>

<category>Math</category>

<subcategory>Random</subcategory>

<type></type>

<example>
<image>randomGaussian_0.png</image>
<code><![CDATA[
for y in range(100): 
    x = randomGaussian() * 15
    line(50, y, 50 + x, y)
]]></code>
</example>


<example>
<image>randomGaussian_1.png</image>
<code><![CDATA[
distribution = [0.0] * 360

def setup():
    size(100, 100)
    for i in range(len(distribution)):
        distribution[i] = int(randomGaussian() * 15)

def draw():
    background(204)
    translate(width / 2, width / 2)
    for i in range(len(distribution)):
        rotate(TWO_PI / len(distribution))
        stroke(0)
        dist = abs(distribution[i])
        line(0, 0, dist, 0)
]]></code>
</example>

<description><![CDATA[
Returns a float from a random series of numbers having a mean of 0 and standard deviation of 1. Each time the <b>randomGaussian()</b> function is called, it returns a number fitting a Gaussian, or normal, distribution. There is theoretically no minimum or maximum value that <b>randomGaussian()</b> might return. Rather, there is just a very low probability that values far from the mean will be returned; and a higher probability that numbers near the mean will be returned.
]]></description>

</root>
